{"version":3,"file":"urbex.min.cjs","sources":["../../lib/environment.ts","../../lib/utils.ts","../../lib/core/error.ts","../../lib/core/api/http.ts","../../lib/core/api/xhr.ts","../../lib/core/constants.ts","../../lib/core/api/conclude.ts","../../lib/core/api/request-api.ts","../../lib/debug.ts","../../lib/core/headers.ts","../../lib/core/pipelines.ts","../../lib/core/transformers.ts","../../lib/constants.ts","../../lib/core/url.ts","../../lib/core/request-config.ts","../../lib/core/urbex.ts","../../lib/urbex.ts"],"sourcesContent":["export type UrbexContext = \"browser\" | \"node\";\r\n\r\nexport class Environment {\r\n    private _context: UrbexContext;\r\n\r\n    constructor() {\r\n        this._context = this.detectContext();\r\n    }\r\n\r\n    private detectContext(): UrbexContext {\r\n        if (typeof window !== \"undefined\" && typeof window.document !== \"undefined\") {\r\n            return \"browser\";\r\n        }\r\n\r\n        if (typeof process !== \"undefined\" && process.versions && process.versions.node) {\r\n            return \"node\";\r\n        }\r\n\r\n        throw new Error(\"Unable to detect environment context.\");\r\n    }\r\n\r\n    private nodeStrictCheck(): void {\r\n        if (this.isBrowser) {\r\n            throw new Error(\"This method is not available in the browser environment.\");\r\n        }\r\n    }\r\n\r\n    get process(): NodeJS.Process {\r\n        if (this.isNode) {\r\n            return process;\r\n        }\r\n\r\n        return {} as NodeJS.Process;\r\n    }\r\n\r\n    get context(): UrbexContext {\r\n        return this._context;\r\n    }\r\n\r\n    get isBrowser(): boolean {\r\n        return this.context === \"browser\";\r\n    }\r\n\r\n    get isNode(): boolean {\r\n        return this.context === \"node\";\r\n    }\r\n\r\n    get isDevelopment(): boolean {\r\n        this.nodeStrictCheck();\r\n\r\n        return process.env.NODE_ENV === \"development\";\r\n    }\r\n\r\n    get isProduction(): boolean {\r\n        this.nodeStrictCheck();\r\n\r\n        return process.env.NODE_ENV === \"production\";\r\n    }\r\n}\r\n\r\nexport const environment = new Environment();\r\n","import type { IObject } from \"./types\";\r\n\r\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void\r\n    ? I\r\n    : never;\r\n\r\n/**\r\n * Check the Object.prototype.toString.call() of a value. Strips the [object ] part.\r\n */\r\nexport function toStringCall(value: any): string {\r\n    const string = Object.prototype.toString.call(value);\r\n    return lowercase(string.substring(8, string.length - 1));\r\n}\r\n\r\nexport function hasOwnProperty<X extends {}, Y extends PropertyKey>(\r\n    obj: X,\r\n    prop: Y\r\n): obj is X & Record<Y, unknown> {\r\n    return obj.hasOwnProperty.call(obj, prop);\r\n}\r\n\r\nexport function isUndefined(value: unknown): value is undefined {\r\n    return typeof value === \"undefined\";\r\n}\r\n\r\nexport function isNegative(value: number): boolean {\r\n    return value < 0;\r\n}\r\n\r\nexport function isPositive(value: number): boolean {\r\n    return value > 0;\r\n}\r\n\r\nexport function absolute(value: number): number {\r\n    return Math.abs(value);\r\n}\r\n\r\nexport function round(value: number, precision: number): number {\r\n    const multiplier = Math.pow(10, precision);\r\n    return Math.round(value * multiplier) / multiplier;\r\n}\r\n\r\nexport function isArray<T>(value: unknown): value is T[] {\r\n    return Array.isArray(value);\r\n}\r\n\r\nexport function isObject(value: unknown): value is object {\r\n    return typeof value === \"object\" && value !== null && !isArray(value);\r\n}\r\n\r\nexport function isString(value: unknown): value is string {\r\n    return typeof value === \"string\";\r\n}\r\n\r\nexport function isFunction(value: unknown): value is Function {\r\n    return typeof value === \"function\";\r\n}\r\n\r\nexport function isEmpty(value: any): boolean {\r\n    if (isArray(value)) {\r\n        return value.length === 0;\r\n    } else if (isObject(value)) {\r\n        return Object.keys(value).length === 0;\r\n    } else {\r\n        return !value;\r\n    }\r\n}\r\n\r\nexport function capitalize(value: string): string {\r\n    value = String(value);\r\n    return value.charAt(0).toUpperCase() + value.slice(1);\r\n}\r\n\r\nexport function uppercase<T extends string>(value: T): T {\r\n    return String(value).toUpperCase() as T;\r\n}\r\n\r\nexport function lowercase(value: string): string {\r\n    return String(value).toLowerCase();\r\n}\r\n\r\nexport function clone<T>(value: T): T {\r\n    if (isArray(value)) {\r\n        return value.slice() as T;\r\n    } else if (isObject(value)) {\r\n        return Object.assign({}, value) as T;\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\n\r\nexport function merge<P = any, T = any>(defaultOptions: P, options: T): P & T {\r\n    return Object.assign({}, defaultOptions, options);\r\n}\r\n\r\nexport function deepMerge<T extends IObject[]>(...objects: T): UnionToIntersection<T[any]> {\r\n    return objects.reduce((acc, obj) => {\r\n        if (isArray(obj)) {\r\n            return acc.concat(obj);\r\n        }\r\n\r\n        for (const key in obj) {\r\n            if (isArray(acc[key]) && isArray(obj[key])) {\r\n                acc[key] = acc[key].concat(obj[key]);\r\n            } else if (isObject(acc[key]) && isObject(obj[key])) {\r\n                acc[key] = deepMerge(acc[key], obj[key]);\r\n            } else {\r\n                acc[key] = obj[key];\r\n            }\r\n        }\r\n\r\n        return acc;\r\n    }, {});\r\n}\r\n\r\nexport function keys<T extends IObject>(obj: T): (keyof T)[] {\r\n    return Object.keys(obj) as (keyof T)[];\r\n}\r\n\r\nexport function values<T extends IObject>(obj: T): T[keyof T][] {\r\n    return keys(obj).map((key) => obj[key]);\r\n}\r\n\r\nexport function forEach<T>(obj: T, fn: (key: keyof T, value: T[keyof T], obj: T) => void): void {\r\n    if (isUndefined(obj)) {\r\n        return;\r\n    }\r\n\r\n    if (isArray(obj)) {\r\n        obj.forEach(function (value, index) {\r\n            fn.call(null, index, value, obj);\r\n        });\r\n    } else {\r\n        for (const key in obj) {\r\n            fn.call(null, key, obj[key], obj);\r\n        }\r\n    }\r\n}\r\n\r\nexport function extractMatchFromRegExp(\r\n    value: string | null,\r\n    regexp: RegExp,\r\n    group: number = 0,\r\n    defaultValue: any = null\r\n): string | null {\r\n    if (value) {\r\n        const matches = regexp.exec(value);\r\n\r\n        if (isArray(matches) && !isEmpty(matches)) {\r\n            return matches[group];\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function startsWithReplacer(value: string, search: string, replace: string): string {\r\n    if (value.startsWith(search)) {\r\n        return value.replace(search, replace);\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function stringReplacer(value: string, search: string | RegExp, replace: string): string {\r\n    return value.replace(search, replace);\r\n}\r\n\r\nexport function ensureLeadingToken(token: string, value: string): string {\r\n    if (argumentIsNotProvided(value)) {\r\n        return \"\";\r\n    }\r\n\r\n    if (value.startsWith(token)) {\r\n        return value;\r\n    }\r\n\r\n    return `${token}${value}`;\r\n}\r\n\r\nexport function ensureTrailingToken(token: string, value: string): string {\r\n    if (argumentIsNotProvided(value)) {\r\n        return \"\";\r\n    }\r\n\r\n    if (value.endsWith(token)) {\r\n        return value;\r\n    }\r\n\r\n    return `${value}${token}`;\r\n}\r\n\r\nexport function argumentIsNotProvided(value: unknown): boolean {\r\n    return value === undefined || value === null;\r\n}\r\n\r\nexport function combineStrings(delimiter: string = \"\", ...strings: string[]): string {\r\n    return strings.filter((string) => !isEmpty(string)).join(delimiter);\r\n}\r\n\r\nexport function replaceObjectProperty<T extends IObject, K extends keyof T>(\r\n    obj: T,\r\n    key: K,\r\n    value: T[K]\r\n): void {\r\n    Object.assign(obj, { [key]: value });\r\n}\r\n\r\nexport function safeStringify(value: any): string {\r\n    try {\r\n        return JSON.stringify(value);\r\n    } catch (error) {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport function createEmptyScheme<T>(keys: string[]): T {\r\n    return keys.reduce((acc, key) => {\r\n        const keys = key.split(\".\");\r\n\r\n        if (keys.length === 1) {\r\n            acc[key] = null;\r\n        } else {\r\n            const [object, ...nestedKeys] = keys;\r\n\r\n            if (!acc[object]) {\r\n                acc[object] = {};\r\n            }\r\n\r\n            const nestedObject = createEmptyScheme(nestedKeys);\r\n            acc[object] = merge(acc[object], nestedObject);\r\n        }\r\n\r\n        return acc;\r\n    }, {} as T);\r\n}\r\n","import type { InternalConfiguration, UrbexErrorType, UrbexResponse } from \"../exportable-types\";\r\n\r\nexport class UrbexError extends Error implements UrbexErrorType {\r\n    status: number;\r\n    request: any;\r\n    config: InternalConfiguration<any>;\r\n    response: UrbexResponse<any>;\r\n\r\n    constructor(error: any) {\r\n        if (!(error instanceof Error)) {\r\n            error = new Error(error);\r\n        }\r\n\r\n        super(error.message);\r\n        this.name = error.name;\r\n        this.stack = error.stack;\r\n    }\r\n\r\n    static create(\r\n        error: any,\r\n        config: InternalConfiguration<any>,\r\n        response: UrbexResponse<any>\r\n    ): UrbexError {\r\n        const urbexError = new UrbexError(error);\r\n\r\n        urbexError.config = config;\r\n        urbexError.response = response;\r\n        urbexError.status = response.status;\r\n        urbexError.request = config;\r\n\r\n        return urbexError;\r\n    }\r\n}\r\n\r\nexport class TimeoutError extends UrbexError {\r\n    constructor(timeout: number) {\r\n        const error = new Error(`Request timed out after ${timeout}ms.`);\r\n\r\n        super(error);\r\n    }\r\n}\r\n","import http from \"http\";\r\nimport https from \"https\";\r\nimport url from \"url\";\r\nimport zlib from \"zlib\";\r\nimport util from \"util\";\r\nimport stream from \"stream\";\r\n\r\nimport type { InternalConfiguration } from \"../../exportable-types\";\r\nimport type { DispatchedResponse, UrbexRequestApi, DispatchedAPIRequest } from \"../../types\";\r\n\r\nimport {\r\n    combineStrings,\r\n    argumentIsNotProvided,\r\n    toStringCall,\r\n    isString,\r\n    ensureLeadingToken,\r\n    ensureTrailingToken,\r\n    isFunction\r\n} from \"../../utils\";\r\nimport { UrbexError, TimeoutError } from \"../error\";\r\n\r\nexport class NodeRequest implements UrbexRequestApi {\r\n    private getAgentFromProtocol(protocol: string): typeof http | typeof https {\r\n        if (protocol === \"https\") {\r\n            return https;\r\n        }\r\n\r\n        return http;\r\n    }\r\n\r\n    private handleDataProtocolRequest(config: InternalConfiguration): DispatchedAPIRequest {\r\n        return new Promise((resolve, reject) => {\r\n            resolve({\r\n                data: null,\r\n                request: null,\r\n                response: null\r\n            });\r\n        });\r\n    }\r\n\r\n    public async send(config: InternalConfiguration): DispatchedAPIRequest {\r\n        return new Promise((resolve, reject) => {\r\n            const agent = this.getAgentFromProtocol(config.url.protocol);\r\n\r\n            if (config.url.protocol === \"data\") {\r\n                return this.handleDataProtocolRequest(config);\r\n            }\r\n\r\n            if (!config.headers.has(\"Accept-Encoding\")) {\r\n                config.headers.set({ \"Accept-Encoding\": \"gzip, deflate, br\" });\r\n            }\r\n\r\n            if (config.url.params && !isString(config.url.params)) {\r\n                config.url.params = config.url.params.toString();\r\n            } else {\r\n                config.url.params = \"\";\r\n            }\r\n\r\n            function onError(error: any): void {\r\n                const err = new UrbexError(error);\r\n                err.config = config;\r\n                err.request = request;\r\n                return reject(err);\r\n            }\r\n\r\n            const options: https.RequestOptions | url.URL = {\r\n                protocol: ensureTrailingToken(\":\", config.url.protocol),\r\n                href: config.url.href,\r\n                hostname: config.url.hostname,\r\n                path: combineStrings(\"\", config.url.endpoint, config.url.params),\r\n                headers: config.headers.get(),\r\n                timeout: config.timeout\r\n            };\r\n\r\n            if (config.url.port) {\r\n                const port = parseInt(config.url.port.toString());\r\n\r\n                if (!isNaN(port)) {\r\n                    options.port = port;\r\n                }\r\n            }\r\n\r\n            const request = agent.request(options);\r\n\r\n            request.on(\"response\", (response) => {\r\n                if (response.destroyed || request.destroyed) {\r\n                    return onError(new UrbexError(\"Request was destroyed.\"));\r\n                }\r\n\r\n                if (config.responseType === \"stream\") {\r\n                    return resolve({\r\n                        data: response,\r\n                        request: request,\r\n                        response: response\r\n                    });\r\n                }\r\n\r\n                const chunks: Buffer[] = [];\r\n\r\n                response.on(\"data\", chunks.push.bind(chunks));\r\n\r\n                response.on(\"error\", onError);\r\n\r\n                response.on(\"close\", () => {\r\n                    if (response.complete) {\r\n                        return;\r\n                    }\r\n\r\n                    response.destroy();\r\n                    request.destroy();\r\n                    return onError(new UrbexError(\"Request was closed prematurely.\"));\r\n                });\r\n\r\n                response.on(\"end\", () => {\r\n                    const body = Buffer.concat(chunks);\r\n\r\n                    resolve({ data: body, request: request, response: response });\r\n                });\r\n            });\r\n\r\n            if (config.timeout) {\r\n                request.setTimeout(config.timeout, () => {\r\n                    reject(new TimeoutError(config.timeout));\r\n                });\r\n            }\r\n\r\n            request.on(\"error\", onError);\r\n            request.end(config.data ?? undefined);\r\n        });\r\n    }\r\n}\r\n\r\nconst br = isFunction(zlib?.brotliDecompress) ? util.promisify(zlib.brotliDecompress) : null;\r\nconst gzip = isFunction(zlib?.gunzip) ? util.promisify(zlib.gunzip) : null;\r\nconst deflate = isFunction(zlib?.inflate) ? util.promisify(zlib.inflate) : null;\r\nconst compress = isFunction(zlib?.createUnzip) ? util.promisify(zlib.createUnzip) : null;\r\n\r\nexport const DECODERS = { br, gzip, deflate, compress };\r\n","import type { InternalConfiguration } from \"../../exportable-types\";\r\nimport type { DispatchedResponse, UrbexRequestApi, DispatchedAPIRequest } from \"../../types\";\r\n\r\nimport { createEmptyScheme } from \"../../utils\";\r\n\r\nexport class BrowserRequest implements UrbexRequestApi {\r\n    public send(config: InternalConfiguration): DispatchedAPIRequest {\r\n        return new Promise(() => {});\r\n    }\r\n}\r\n\r\nexport const DECODERS = createEmptyScheme([\"br\", \"gzip\", \"deflate\", \"compress\"]);\r\n","import type { InternalConfiguration, URIComponent, UrbexResponse } from \"../exportable-types\";\r\nimport type { PipelineExecutorsManager } from \"../types\";\r\n\r\nimport { environment } from \"../environment\";\r\nimport { merge, createEmptyScheme } from \"../utils\";\r\n\r\nexport const DEFAULT_BROWSER_HEADERS = {\r\n    \"Content-Type\": \"application/json\"\r\n};\r\n\r\nexport const DEFAULT_NODE_HEADERS = merge(DEFAULT_BROWSER_HEADERS, {\r\n    \"User-Agent\": `UrbexClient (Node.js ${environment.process.version}; ${environment.process.platform})`\r\n});\r\n\r\nexport const DEFAULT_URI_COMPONENT = createEmptyScheme<URIComponent>([\r\n    \"endpoint\",\r\n    \"hostname\",\r\n    \"href\",\r\n    \"origin\",\r\n    \"params\",\r\n    \"port\",\r\n    \"protocol\",\r\n    \"urlMount\"\r\n]);\r\n\r\nexport const DEFAULT_PIPELINE_EXECUTORS: PipelineExecutorsManager = {\r\n    request: [],\r\n    response: []\r\n};\r\n\r\nexport const DEFAULT_CLIENT_OPTIONS: InternalConfiguration = {\r\n    url: merge(DEFAULT_URI_COMPONENT, {\r\n        protocol: \"http\",\r\n        urlMount: \"/api\"\r\n    }),\r\n    timeout: 0,\r\n    method: \"GET\",\r\n    headers: null,\r\n    data: null,\r\n    cache: {},\r\n    pipelines: DEFAULT_PIPELINE_EXECUTORS,\r\n    maxContentLength: Infinity,\r\n    responseType: \"json\",\r\n    responseEncoding: \"utf8\"\r\n};\r\n\r\nexport const DEFAULT_URBEX_RESPONSE = createEmptyScheme<UrbexResponse>([\r\n    \"status\",\r\n    \"statusText\",\r\n    \"headers\",\r\n    \"data\",\r\n    \"config\",\r\n    \"request\",\r\n    \"response\",\r\n    \"duration\",\r\n    \"timestamp\",\r\n    \"cache.key\",\r\n    \"cache.hit\",\r\n    \"cache.pulled\",\r\n    \"cache.stored\"\r\n]);\r\n","import type { InternalConfiguration, UrbexResponse } from \"../../exportable-types\";\r\nimport type { DispatchedResponse, RequestAPIResponse } from \"../../types\";\r\n\r\nimport { deepMerge, clone, isEmpty } from \"../../utils\";\r\nimport { DEFAULT_URBEX_RESPONSE } from \"../constants\";\r\n\r\ntype ConcludeRequest = (config: RequestAPIResponse) => Promise<DispatchedResponse>;\r\n\r\nexport async function startRequest(config: InternalConfiguration): Promise<ConcludeRequest> {\r\n    const startTime = Date.now();\r\n    const timestamp = new Date().toISOString();\r\n    const clonedResponse = clone(DEFAULT_URBEX_RESPONSE);\r\n\r\n    if (!isEmpty(config.pipelines.request)) {\r\n        // loop over the request pipelines\r\n        // each pipeline is a Promise that returns a new config\r\n        // each new config is passed to the next pipeline\r\n        // the very last config will mutate the `config` parameter\r\n\r\n        for (const pipeline of config.pipelines.request) {\r\n            config = await pipeline.execute(config);\r\n\r\n            if (config === null) {\r\n                throw new Error(\r\n                    \"Urbex expected a valid configuration to be returned from a request pipeline, but got null.\"\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    // all of the request pipelines are executed here\r\n\r\n    return async function concludeRequest(result): Promise<DispatchedResponse> {\r\n        const incomingResult = result;\r\n\r\n        // all of the response pipelines are executed here\r\n\r\n        let response = deepMerge(clonedResponse, {\r\n            data: incomingResult.data,\r\n            config: config,\r\n            request: incomingResult.request,\r\n            response: incomingResult.response,\r\n            timestamp: timestamp,\r\n            responseType: config.responseType\r\n        });\r\n\r\n        if (incomingResult.response) {\r\n            response.headers = incomingResult.response.headers;\r\n            response.status = incomingResult.response.statusCode;\r\n            response.statusText = incomingResult.response.statusMessage;\r\n        }\r\n\r\n        if (!isEmpty(config.pipelines.response)) {\r\n            for (const pipeline of config.pipelines.response) {\r\n                response = await pipeline.execute(response);\r\n            }\r\n        }\r\n\r\n        const endTime = Date.now();\r\n        const duration = endTime - startTime;\r\n\r\n        response.duration = duration;\r\n        return Promise.resolve(response);\r\n    };\r\n}\r\n","import { CacheClock } from \"cache-clock\";\r\n\r\nimport type { UrbexContext } from \"../../environment\";\r\nimport type { InternalConfiguration, UrbexResponse } from \"../../exportable-types\";\r\nimport type { DispatchedResponse, UrbexRequestApi } from \"../../types\";\r\n\r\nimport { NodeRequest } from \"./http\";\r\nimport { BrowserRequest } from \"./xhr\";\r\nimport { startRequest } from \"./conclude\";\r\nimport { environment } from \"../../environment\";\r\nimport { UrbexError } from \"../error\";\r\nimport { UrbexHeaders } from \"../headers\";\r\nimport { clone } from \"../../utils\";\r\n\r\n// here all of the interceptors are checked\r\n// cache clocks are checked here\r\n// the response is created here\r\n\r\nexport class RequestApi {\r\n    /**\r\n     * The internal api that is used to send requests.\r\n     */\r\n    protected $api: UrbexRequestApi;\r\n    /**\r\n     * An isolated cache module that is used to cache requests.\r\n     */\r\n    protected $cache: CacheClock;\r\n\r\n    constructor() {\r\n        this.register(environment.context);\r\n\r\n        this.$cache = new CacheClock({\r\n            autoStart: false,\r\n            debug: false\r\n        });\r\n    }\r\n\r\n    private register(context: UrbexContext) {\r\n        if (context === \"browser\") {\r\n            this.$api = new BrowserRequest();\r\n            return;\r\n        }\r\n\r\n        if (context === \"node\") {\r\n            this.$api = new NodeRequest();\r\n            return;\r\n        }\r\n\r\n        throw new Error(\r\n            `Urbex expected a valid context to register a request api, but got ${context}.`\r\n        );\r\n    }\r\n\r\n    protected async dispatchRequest(config: InternalConfiguration): DispatchedResponse {\r\n        try {\r\n            const configuration = clone(config);\r\n            const concludeRequest = await startRequest(configuration);\r\n\r\n            const isCacheEnabled = configuration.cache && configuration.cache.enabled;\r\n\r\n            // for some odd reason, result.cache had this weird mutation\r\n            // issue even when CLONING the result, so I had to do this\r\n            // to get it to work properly\r\n\r\n            const cache: UrbexResponse[\"cache\"] = {\r\n                key: null,\r\n                hit: false,\r\n                pulled: false,\r\n                stored: false\r\n            };\r\n\r\n            if (isCacheEnabled) {\r\n                const cacheKey = this.$cache.getCacheKey(configuration.url.href);\r\n                const entity = this.$cache.get(cacheKey, true);\r\n\r\n                cache.hit = true;\r\n\r\n                if (entity) {\r\n                    const result = await concludeRequest({ data: entity.v });\r\n\r\n                    cache.key = cacheKey;\r\n                    cache.pulled = true;\r\n                    result.cache = cache;\r\n\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n\r\n            const response = await this.$api.send(configuration);\r\n            const result = await concludeRequest(response);\r\n\r\n            if (isCacheEnabled) {\r\n                this.$cache.set(configuration.url.href, response.data);\r\n\r\n                cache.key = this.$cache.getCacheKey(configuration.url.href);\r\n                cache.stored = true;\r\n            }\r\n\r\n            result.cache = cache;\r\n\r\n            return Promise.resolve(result);\r\n        } catch (error: any) {\r\n            return Promise.reject(new UrbexError(error));\r\n        }\r\n    }\r\n}\r\n","type DebugType = \"log\" | \"warn\" | \"error\";\r\n\r\nexport function debug(type: DebugType, message: string): void {\r\n    console[type](`[urbex] ${message}`);\r\n}\r\n","import type { Headers, HeaderValues, NormalizedHeaders } from \"../types\";\r\n\r\nimport {\r\n    isArray,\r\n    isObject,\r\n    isUndefined,\r\n    hasOwnProperty,\r\n    forEach,\r\n    merge,\r\n    capitalize,\r\n    argumentIsNotProvided,\r\n    isEmpty\r\n} from \"../utils\";\r\nimport { debug } from \"../debug\";\r\nimport { environment } from \"../environment\";\r\nimport { DEFAULT_BROWSER_HEADERS, DEFAULT_NODE_HEADERS } from \"./constants\";\r\n\r\nfunction parseHeaderKey(key: string): string {\r\n    if (key) {\r\n        return formatHeaderKey(key.toLowerCase()).trim();\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nfunction parseHeaderValue(value: HeaderValues): string {\r\n    if (isUndefined(value) || value === false || value === null) {\r\n        return undefined;\r\n    }\r\n\r\n    if (isArray(value)) {\r\n        return value.join(\", \");\r\n    }\r\n\r\n    if (isObject(value)) {\r\n        return JSON.stringify(value);\r\n    }\r\n\r\n    return String(value);\r\n}\r\n\r\nfunction normalizeHeaders(headers: Headers): NormalizedHeaders {\r\n    const newHeaders: NormalizedHeaders = {};\r\n\r\n    forEach(headers, (key, value) => {\r\n        if (isUndefined(key) || isUndefined(value)) {\r\n            return;\r\n        }\r\n\r\n        const normalizedKey = parseHeaderKey(key);\r\n        const normalizedValue = parseHeaderValue(value);\r\n\r\n        if (normalizedKey && normalizedValue) {\r\n            newHeaders[normalizedKey] = normalizedValue;\r\n        }\r\n    });\r\n\r\n    return newHeaders;\r\n}\r\n\r\nfunction formatHeaderKey(key: string): string {\r\n    return key.split(\"-\").map(capitalize).join(\"-\");\r\n}\r\n\r\nexport class UrbexHeaders {\r\n    protected $headers: NormalizedHeaders = {};\r\n\r\n    constructor(headers?: Headers, withDefaults: boolean = true) {\r\n        if (withDefaults) {\r\n            this.set(this.defaults, false);\r\n        }\r\n\r\n        if (isObject(headers) && !isEmpty(headers)) {\r\n            this.set(headers, withDefaults);\r\n        }\r\n    }\r\n\r\n    static construct(headers: Headers = {}, withDefaults: boolean = true): UrbexHeaders {\r\n        return new UrbexHeaders(headers, withDefaults);\r\n    }\r\n\r\n    get defaults(): typeof DEFAULT_NODE_HEADERS | typeof DEFAULT_BROWSER_HEADERS {\r\n        return environment.isNode ? DEFAULT_NODE_HEADERS : DEFAULT_BROWSER_HEADERS;\r\n    }\r\n\r\n    /**\r\n     * Set a header configuration to use for all requests made by the current\r\n     * instance of the Urbex client\r\n     *\r\n     * Setting a configuration will merge with any existing configuration.\r\n     * Optionally, you can pass a boolean to clear the existing configuration\r\n     *\r\n     * @param headers The headers to set\r\n     * @param forceMerge Whether to merge the headers with the existing configuration\r\n     */\r\n    public set(headers?: Headers, forceMerge: boolean = true): Headers {\r\n        if (!isObject(headers)) {\r\n            debug(\"error\", `Attempted to set headers with a non-object value: ${typeof headers}`);\r\n            return headers;\r\n        }\r\n\r\n        const normalizedHeaders = this.normalize(headers);\r\n        const merged = forceMerge ? merge(this.$headers, normalizedHeaders) : normalizedHeaders;\r\n\r\n        return (this.$headers = merged);\r\n    }\r\n    /**\r\n     * Get the current headers object\r\n     */\r\n    public get(): NormalizedHeaders {\r\n        return this.$headers;\r\n    }\r\n\r\n    /**\r\n     * Whether the headers object contains a given header\r\n     */\r\n    public has(key: string): boolean {\r\n        return hasOwnProperty(this.$headers, key);\r\n    }\r\n\r\n    /**\r\n     * Delete a header from the headers object\r\n     */\r\n    public delete(key: string): void {\r\n        forEach(this.$headers, (headerKey) => {\r\n            if (headerKey.toLowerCase() === key.toLowerCase()) {\r\n                delete this.$headers[headerKey];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * Clear all headers that have been set\r\n     * @param empty Whether to empty the headers object\r\n     *\r\n     */\r\n    public clear(empty: boolean = false): void {\r\n        this.$headers = {};\r\n\r\n        if (!empty) {\r\n            this.set(this.defaults, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Normalize an incoming headers object\r\n     */\r\n\r\n    public normalize(headers: Headers): NormalizedHeaders {\r\n        if (argumentIsNotProvided(headers) || !isObject(headers)) {\r\n            return {};\r\n        }\r\n\r\n        return normalizeHeaders(headers);\r\n    }\r\n}\r\n","type ReturnType<T> = T extends (config: any) => infer R ? R : any;\r\ntype Parameters<T extends Function> = T extends (config: infer P) => any ? P : never;\r\n\r\nexport class PipelineExecutor<T extends Function> {\r\n    private $executor: T = null;\r\n\r\n    constructor(executor: T) {\r\n        this.$executor = executor;\r\n    }\r\n\r\n    public execute(config: Parameters<T>): ReturnType<T> {\r\n        return this.$executor(config);\r\n    }\r\n}\r\n","import type { RequestExecutor, ResponseExecutor } from \"../exportable-types\";\r\n\r\nimport { PipelineExecutor } from \"./pipelines\";\r\nimport { environment } from \"../environment\";\r\nimport { DECODERS } from \"./api/http\";\r\n\r\nexport const transformRequestData = new PipelineExecutor<RequestExecutor>((config) => {\r\n    return Promise.resolve(config);\r\n});\r\n\r\nexport const decodeResponseData = new PipelineExecutor<ResponseExecutor>(async (response) => {\r\n    const responseType = response.config.responseType;\r\n\r\n    if (responseType === \"raw\" || responseType === \"stream\") {\r\n        return Promise.resolve(response);\r\n    }\r\n\r\n    const encoding = response.headers[\"content-encoding\"];\r\n\r\n    if (Buffer.isBuffer(response.data) && response.data.length) {\r\n        if (encoding) {\r\n            const decoder = DECODERS[encoding];\r\n\r\n            if (decoder) {\r\n                const decompressed = await decoder(response.data);\r\n                const maxContentLength = response.config.maxContentLength;\r\n\r\n                if (maxContentLength > -1 || maxContentLength !== Infinity) {\r\n                    if (decompressed.length > maxContentLength) {\r\n                        throw new Error(\r\n                            `Content length of ${decompressed.length} exceeds the maxContentLength of ${maxContentLength}`\r\n                        );\r\n                    }\r\n                }\r\n\r\n                response.data = decompressed;\r\n            }\r\n        }\r\n    } else {\r\n        response.data = null;\r\n    }\r\n\r\n    return Promise.resolve(response);\r\n});\r\n\r\nexport const transformResponseData = new PipelineExecutor<ResponseExecutor>((response) => {\r\n    const responseType = response.config.responseType;\r\n\r\n    if (responseType === \"raw\" || responseType === \"arraybuffer\" || responseType === \"stream\") {\r\n        return Promise.resolve(response);\r\n    }\r\n\r\n    if (response.data) {\r\n        // https://stackoverflow.com/questions/24356713/node-js-readfile-error-with-utf8-encoded-file-on-windows\r\n\r\n        const { responseEncoding, responseType } = response.config;\r\n\r\n        const bufferString = response.data.toString(responseEncoding);\r\n\r\n        if (responseType === \"json\") {\r\n            response.data = JSON.parse(bufferString);\r\n        } else {\r\n            response.data = bufferString;\r\n        }\r\n    }\r\n\r\n    return Promise.resolve(response);\r\n});\r\n","import type { MethodsUpper } from \"./types\";\r\n\r\n// support for any protocols to be used with the uri component\r\n// currently only http and https are supported\r\n\r\n// regex to get the protocol from the uri component, can match anything\r\nexport const PROTOCOL_REGEXP = /^([a-z0-9]+):\\/\\//i;\r\nexport const HOSTNAME_REGEXP = /^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?([^:\\/\\n]+)/i;\r\nexport const PORT_REGEXP = /:(\\d{2,5})$/;\r\n\r\nexport const URL_REGEXP =\r\n    /^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$/i;\r\n\r\nexport const URI_TEMPLATE_REGEXP_LEFT = \"[{][^{{]*\\\\b\";\r\nexport const URI_TEMPLATE_REGEXP_RIGHT = \"\\\\b[^{}]*[}]\";\r\n\r\nexport const METHODS = [\"PUT\", \"POST\", \"PATCH\", \"OPTIONS\", \"HEAD\", \"GET\", \"DELETE\"];\r\n","import type { UrbexURL, URIComponent } from \"../exportable-types\";\r\nimport type { SearchParams } from \"../types\";\r\n\r\nimport {\r\n    URL_REGEXP,\r\n    HOSTNAME_REGEXP,\r\n    PROTOCOL_REGEXP,\r\n    URI_TEMPLATE_REGEXP_LEFT,\r\n    URI_TEMPLATE_REGEXP_RIGHT\r\n} from \"../constants\";\r\nimport {\r\n    isObject,\r\n    isString,\r\n    extractMatchFromRegExp,\r\n    ensureLeadingToken,\r\n    stringReplacer,\r\n    argumentIsNotProvided,\r\n    combineStrings,\r\n    forEach,\r\n    merge,\r\n    isFunction,\r\n    isEmpty\r\n} from \"../utils\";\r\nimport { DEFAULT_URI_COMPONENT } from \"./constants\";\r\n\r\nexport type ParamSerializerType = \"string\" | \"object\" | \"URLSearchParams\";\r\n\r\n/**\r\n * Test if a url string has a valid protocol.\r\n *\r\n * Most likely going to deprecate this function.\r\n */\r\nexport function isProtocolURL(url: string): boolean {\r\n    return PROTOCOL_REGEXP.test(url);\r\n}\r\n\r\n/**\r\n * Test if a url string has a valid hostname.\r\n *\r\n * Most likely going to deprecate this function.\r\n */\r\nexport function isHostnameURL(url: string): boolean {\r\n    return HOSTNAME_REGEXP.test(url);\r\n}\r\n\r\n/**\r\n * Test if a url is valid\r\n */\r\nexport function isValidURL(url: string): boolean {\r\n    try {\r\n        new URL(url);\r\n\r\n        return true;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function convertStringToURIComponent(input: string, urlMount: string = \"\"): URIComponent {\r\n    const url = new URL(input);\r\n\r\n    const protocol = stringReplacer(url.protocol, \":\", \"\") as string;\r\n    const port = url.port ? parseInt(url.port) : \"\";\r\n    const pathname = stringReplacer(url.pathname, urlMount, \"\");\r\n\r\n    return {\r\n        href: url.href,\r\n        origin: url.origin,\r\n        protocol: protocol,\r\n        hostname: url.hostname,\r\n        port: port,\r\n        endpoint: pathname,\r\n        params: url.search,\r\n        urlMount: urlMount\r\n    };\r\n}\r\n\r\n// turn this into its own package\r\nexport function convertURIComponentToString(input: Partial<URIComponent>): string {\r\n    let template = \"{protocol+://}{hostname}{:+port}{urlMount}{endpoint}{?+params}\";\r\n\r\n    function createRegexString(word: string): RegExp {\r\n        return new RegExp(`${URI_TEMPLATE_REGEXP_LEFT}${word}${URI_TEMPLATE_REGEXP_RIGHT}`, \"gi\");\r\n    }\r\n\r\n    if (argumentIsNotProvided(input) || isEmpty(input) || !isObject(input)) {\r\n        return \"\";\r\n    }\r\n\r\n    if (input.params) {\r\n        input.params = serializeParams(input.params);\r\n    }\r\n\r\n    forEach(input, (key, value) => {\r\n        const regex = createRegexString(key);\r\n\r\n        if (argumentIsNotProvided(value) || isEmpty(value)) {\r\n            template = stringReplacer(template, regex, \"\");\r\n        } else {\r\n            const match = extractMatchFromRegExp(template, regex, 0, \"\");\r\n            const templateValue = stringReplacer(match, key, value.toString())\r\n                .replace(/\\+/g, \"\")\r\n                .replace(/^\\{/, \"\")\r\n                .replace(/\\}$/, \"\");\r\n\r\n            template = stringReplacer(template, match, templateValue);\r\n        }\r\n    });\r\n\r\n    return template;\r\n}\r\n\r\nexport function parseURIIntoComponent(\r\n    component: UrbexURL,\r\n    allowEndpoints: boolean = true\r\n): Partial<URIComponent> {\r\n    if (isString(component)) {\r\n        if (isValidURL(component)) {\r\n            return convertStringToURIComponent(component);\r\n        } else if (allowEndpoints) {\r\n            return {\r\n                endpoint: ensureLeadingToken(\"/\", component)\r\n            };\r\n        } else {\r\n            throw new Error(\r\n                \"An invalid URL was provided. A valid URL string in the format of <scheme>://<hostname> must be passed when using `urbex.configure()`.\"\r\n            );\r\n        }\r\n    } else if (isObject(component)) {\r\n        const protocol = extractMatchFromRegExp(component.protocol, PROTOCOL_REGEXP, 0, \"http\");\r\n        const hostname = stringReplacer(\r\n            component.hostname,\r\n            new RegExp(`^${protocol}://`, \"gi\"),\r\n            \"\"\r\n        );\r\n\r\n        const endpoint = ensureLeadingToken(\"/\", component.endpoint);\r\n        const urlMount = ensureLeadingToken(\"/\", component.urlMount);\r\n\r\n        const buildableComponent = merge(component, {\r\n            protocol: protocol,\r\n            hostname: hostname,\r\n            endpoint: endpoint,\r\n            urlMount: urlMount\r\n        });\r\n\r\n        const componentAsString = convertURIComponentToString(buildableComponent);\r\n        const newComponent = convertStringToURIComponent(componentAsString, urlMount);\r\n\r\n        return newComponent;\r\n    } else {\r\n        throw new Error(\"Unable to parse the provided URI. Must be either a string or an object.\");\r\n    }\r\n}\r\n\r\nexport function serializeParams(\r\n    params: SearchParams,\r\n    serializerType: ParamSerializerType = \"string\"\r\n): Record<string, string> | string {\r\n    if (argumentIsNotProvided(params)) {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        const searchParams = new URLSearchParams(params);\r\n\r\n        if (serializerType === \"object\") {\r\n            const params = {};\r\n\r\n            searchParams.forEach((value, key) => {\r\n                params[key] = value;\r\n            });\r\n\r\n            return params;\r\n        }\r\n\r\n        return searchParams.toString();\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n","import type { InternalConfiguration, UrbexConfig, URIComponent } from \"../exportable-types\";\r\n\r\nimport { UrbexHeaders } from \"./headers\";\r\nimport { transformRequestData, transformResponseData, decodeResponseData } from \"./transformers\";\r\nimport { environment } from \"../environment\";\r\nimport {\r\n    isObject,\r\n    merge,\r\n    deepMerge,\r\n    clone,\r\n    hasOwnProperty,\r\n    isString,\r\n    extractMatchFromRegExp,\r\n    uppercase,\r\n    argumentIsNotProvided,\r\n    isEmpty\r\n} from \"../utils\";\r\nimport { isValidURL, serializeParams, parseURIIntoComponent } from \"./url\";\r\nimport { PROTOCOL_REGEXP, HOSTNAME_REGEXP, METHODS } from \"../constants\";\r\nimport { DEFAULT_CLIENT_OPTIONS, DEFAULT_URI_COMPONENT } from \"./constants\";\r\n\r\nfunction determineAppropriateURI(): URIComponent {\r\n    const component = merge(DEFAULT_URI_COMPONENT, {\r\n        protocol: \"https\",\r\n        urlMount: \"/api\"\r\n    });\r\n\r\n    if (environment.isBrowser) {\r\n        const { protocol, hostname, port } = window.location;\r\n\r\n        Object.assign(component, {\r\n            protocol: protocol.replace(\":\", \"\"),\r\n            hostname: hostname,\r\n            port: port\r\n        });\r\n    } else if (environment.isNode) {\r\n        Object.assign(component, {\r\n            protocol: \"http\",\r\n            hostname: \"localhost\",\r\n            port: 3000\r\n        });\r\n    }\r\n\r\n    return component;\r\n}\r\n\r\nexport class RequestConfig {\r\n    private $config: InternalConfiguration;\r\n\r\n    constructor(config?: UrbexConfig) {\r\n        const component = parseURIIntoComponent(determineAppropriateURI());\r\n\r\n        this.$config = merge(DEFAULT_CLIENT_OPTIONS, {\r\n            url: component,\r\n            headers: new UrbexHeaders()\r\n        });\r\n\r\n        if (isObject(config) && !isEmpty(config)) {\r\n            this.set(this.createConfigurationObject(config, true));\r\n        }\r\n\r\n        this.$config.pipelines.request.unshift(transformRequestData);\r\n\r\n        if (environment.isNode) {\r\n            this.$config.pipelines.response.unshift(decodeResponseData, transformResponseData);\r\n        }\r\n    }\r\n\r\n    public defaultConfig(): InternalConfiguration {\r\n        return merge(DEFAULT_CLIENT_OPTIONS, {\r\n            url: parseURIIntoComponent(determineAppropriateURI()),\r\n            headers: new UrbexHeaders()\r\n        });\r\n    }\r\n\r\n    public createConfigurationObject(\r\n        config: UrbexConfig,\r\n        allowEndpoints: boolean\r\n    ): InternalConfiguration {\r\n        const parsed = this.parseIncomingConfig(config, allowEndpoints);\r\n        const merged = this.merge(parsed);\r\n\r\n        return merged;\r\n    }\r\n\r\n    public parseIncomingConfig(\r\n        config: UrbexConfig,\r\n        allowEndpoints: boolean\r\n    ): Partial<InternalConfiguration> {\r\n        if (argumentIsNotProvided(config) || !isObject(config)) {\r\n            throw new Error(\"The configuration must be an object with valid properties.\");\r\n        }\r\n\r\n        const configuration = clone(config);\r\n\r\n        if (hasOwnProperty(configuration, \"url\")) {\r\n            const currentUrlConfig = this.get().url;\r\n\r\n            if (isObject(configuration.url)) {\r\n                // have to merge otherwise the uri parser may\r\n                // throw an error if fewer values are provided\r\n                configuration.url = merge(currentUrlConfig, configuration.url);\r\n            }\r\n\r\n            if (allowEndpoints && configuration.url.toString().startsWith(\"/\")) {\r\n                configuration.url = merge(currentUrlConfig, {\r\n                    endpoint: configuration.url\r\n                });\r\n            }\r\n\r\n            const parsed = parseURIIntoComponent(configuration.url, allowEndpoints);\r\n            configuration.url = parsed;\r\n        }\r\n\r\n        if (hasOwnProperty(configuration, \"method\")) {\r\n            const method = uppercase(configuration.method);\r\n\r\n            if (!METHODS.includes(method)) {\r\n                throw new Error(`The method ${method} is not a valid HTTP method.`);\r\n            }\r\n\r\n            configuration.method = method;\r\n        }\r\n\r\n        const timeout = parseInt(\r\n            configuration.timeout?.toString() ?? DEFAULT_CLIENT_OPTIONS.timeout.toString()\r\n        );\r\n\r\n        if (isNaN(timeout)) {\r\n            configuration.timeout = DEFAULT_CLIENT_OPTIONS.timeout;\r\n        }\r\n\r\n        const maxContentLength = parseInt(\r\n            configuration.maxContentLength?.toString() ??\r\n                DEFAULT_CLIENT_OPTIONS.maxContentLength.toString()\r\n        );\r\n\r\n        if (isNaN(maxContentLength)) {\r\n            configuration.maxContentLength = DEFAULT_CLIENT_OPTIONS.maxContentLength;\r\n        }\r\n\r\n        const headers = UrbexHeaders.construct(configuration.headers, true);\r\n        delete configuration.headers;\r\n\r\n        return merge<UrbexConfig>(configuration, {\r\n            headers: headers\r\n        });\r\n    }\r\n\r\n    public set(config: InternalConfiguration): InternalConfiguration {\r\n        this.$config = config;\r\n        return config;\r\n    }\r\n\r\n    public merge(\r\n        config?: InternalConfiguration | Partial<InternalConfiguration>\r\n    ): InternalConfiguration {\r\n        if (argumentIsNotProvided(config) || !isObject(config)) {\r\n            return this.get();\r\n        }\r\n\r\n        const currentConfig = this.get();\r\n        const incomingHeaders = config.headers?.get() ?? {};\r\n\r\n        const mergedHeaders = merge(currentConfig.headers, incomingHeaders);\r\n\r\n        delete config.headers;\r\n\r\n        const merged = deepMerge(currentConfig, config);\r\n        const headersObject = UrbexHeaders.construct(mergedHeaders);\r\n\r\n        return merge(merged, { headers: headersObject });\r\n    }\r\n\r\n    public get(): InternalConfiguration {\r\n        return this.$config;\r\n    }\r\n\r\n    /**\r\n     * Reset the configuration to its default state.\r\n     */\r\n    public reset() {}\r\n}\r\n","import type { CacheClock } from \"cache-clock\";\r\nimport type {\r\n    Methods,\r\n    MethodsLower,\r\n    MethodsUpper,\r\n    RequestUrlPath,\r\n    DispatchedResponse,\r\n    PipelineExecutorsManager\r\n} from \"../types\";\r\nimport type { UrbexURL, UrbexConfig, InternalConfiguration } from \"../exportable-types\";\r\n\r\nimport { RequestApi } from \"./api/request-api\";\r\nimport { RequestConfig } from \"./request-config\";\r\nimport { UrbexError } from \"./error\";\r\nimport {\r\n    deepMerge,\r\n    merge,\r\n    clone,\r\n    isString,\r\n    isObject,\r\n    argumentIsNotProvided,\r\n    hasOwnProperty,\r\n    stringReplacer,\r\n    forEach,\r\n    isUndefined,\r\n    uppercase,\r\n    isEmpty\r\n} from \"../utils\";\r\n\r\ntype UrbexDirectRequest = Omit<UrbexConfig, \"data\" | \"url\" | \"cache\">;\r\ntype UrbexMethodRequest = Omit<UrbexDirectRequest, \"method\">;\r\n\r\nexport interface UrbexClient {\r\n    /**\r\n     * Send a GET request.\r\n     */\r\n    get(url: UrbexURL, config?: UrbexMethodRequest): DispatchedResponse;\r\n    /**\r\n     * Send a POST request.\r\n     */\r\n    post(url: UrbexURL, data?: any, config?: UrbexMethodRequest): DispatchedResponse;\r\n    /**\r\n     * Send a PUT request.\r\n     */\r\n    put(url: UrbexURL, data?: any, config?: UrbexMethodRequest): DispatchedResponse;\r\n    /**\r\n     * Send a PATCH request.\r\n     */\r\n    patch(url: UrbexURL, data?: any, config?: UrbexMethodRequest): DispatchedResponse;\r\n    /**\r\n     * Send a DELETE request.\r\n     */\r\n    delete(url: UrbexURL, config?: UrbexMethodRequest): DispatchedResponse;\r\n    /**\r\n     * Send a HEAD request.\r\n     */\r\n    head(url: UrbexURL, config?: UrbexMethodRequest): DispatchedResponse;\r\n    /**\r\n     * Send a OPTIONS request.\r\n     */\r\n    options(url: UrbexURL, config?: UrbexMethodRequest): DispatchedResponse;\r\n}\r\n\r\nfunction createMethodConfig(method: Methods, uri: UrbexURL, config: UrbexConfig): UrbexConfig {\r\n    if (argumentIsNotProvided(uri)) {\r\n        throw new Error(\r\n            \"Attempted to call a HTTP method without providing a URL. If you want to use the default URL, use `urbex.send` instead.\"\r\n        );\r\n    }\r\n\r\n    return merge(config, { url: uri, method: method });\r\n}\r\n\r\nexport class UrbexClient extends RequestApi {\r\n    private $config: RequestConfig;\r\n    private $pipelines: PipelineExecutorsManager = {\r\n        request: [],\r\n        response: []\r\n    };\r\n\r\n    constructor(config?: UrbexConfig) {\r\n        super();\r\n\r\n        this.$config = new RequestConfig(config);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Creates a new instance of the UrbexClient.\r\n     */\r\n    static create(config?: UrbexConfig): UrbexClient {\r\n        return new UrbexClient(config);\r\n    }\r\n\r\n    /**\r\n     * Current, and most up-to-date configuration of the UrbexClient.\r\n     */\r\n    get config(): InternalConfiguration {\r\n        return this.$config.get();\r\n    }\r\n\r\n    /**\r\n     * The internal cache module.\r\n     */\r\n    get cache(): CacheClock {\r\n        return this.$cache;\r\n    }\r\n\r\n    /**\r\n     * Configures the UrbexClient. You are free to call this method as\r\n     * many times as you want. All configurations will be merged together.\r\n     *\r\n     * @param config The configuration to use.\r\n     */\r\n    public configure(config: UrbexConfig): void {\r\n        const configuration = this.$config.createConfigurationObject(config, false);\r\n        this.$config.set(configuration);\r\n\r\n        if (isEmpty(configuration.cache)) {\r\n            if (this.$cache) {\r\n                this.$cache.clear();\r\n\r\n                if (this.$cache.isRunning) {\r\n                    this.$cache.stop();\r\n                }\r\n            }\r\n        } else {\r\n            this.$cache.configure(configuration.cache);\r\n\r\n            if (!this.$cache.isRunning) {\r\n                this.$cache.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    public send(config: UrbexConfig = {}): DispatchedResponse {\r\n        const configuration = this.$config.parseIncomingConfig(config, true);\r\n        const merged = this.$config.merge(configuration);\r\n\r\n        return this.dispatchRequest(merged);\r\n    }\r\n\r\n    /**\r\n     * Inject pipelines into the UrbexClient. This allows you to add custom logic to the request/response\r\n     */\r\n    public injectPipeline(): void {}\r\n\r\n    /**\r\n     * Eject a pipeline from the UrbexClient.\r\n     */\r\n    public ejectPipeline(): void {}\r\n\r\n    /**\r\n     * When a response is received, the UrbexClient will actively push out the response to all active\r\n     * subscriptions\r\n     */\r\n    public subscribe() {}\r\n\r\n    public unsubscribe(): void {}\r\n}\r\n\r\nforEach([\"delete\", \"get\", \"head\", \"options\"], (_, value: MethodsLower) => {\r\n    UrbexClient.prototype[value] = function (url: UrbexURL, config?: UrbexMethodRequest) {\r\n        return this.send(createMethodConfig(uppercase(value), url, config));\r\n    };\r\n});\r\n\r\nforEach([\"post\", \"put\", \"patch\"], (_, value: MethodsLower) => {\r\n    UrbexClient.prototype[value] = function (\r\n        url: UrbexURL,\r\n        data?: any,\r\n        config?: UrbexMethodRequest\r\n    ) {\r\n        function combineIncomingConfig(): UrbexConfig {\r\n            if (isUndefined(data)) {\r\n                return data;\r\n            }\r\n\r\n            if (isObject(config)) {\r\n                return merge(config, { data: data });\r\n            } else {\r\n                return { data };\r\n            }\r\n        }\r\n\r\n        const configuration = combineIncomingConfig();\r\n\r\n        return this.send(createMethodConfig(uppercase(value), url, configuration));\r\n    };\r\n});\r\n\r\nexport function isUrbexClient(client: unknown): client is UrbexClient {\r\n    return client instanceof UrbexClient;\r\n}\r\n","import type { UrbexConfig } from \"./exportable-types\";\r\n\r\nimport { environment, Environment } from \"./environment\";\r\nimport { UrbexClient, isUrbexClient } from \"./core/urbex\";\r\nimport { PipelineExecutor } from \"./core/pipelines\";\r\n\r\nexport interface ExtendedUrbexClient extends UrbexClient {\r\n    /**\r\n     * Create a new isolated instance of the Urbex client\r\n     *\r\n     * Any existing configuration will be copied to the new\r\n     * instance. Furthermore, changes made to the new instance\r\n     * will not affect the original instance\r\n     */\r\n    isolateClient(config?: UrbexConfig): UrbexClient;\r\n    /**\r\n     *\r\n     * TypeScript safe guard to check if an object is an instance of UrbexClient\r\n     */\r\n    isUrbexClient(client: unknown): client is UrbexClient;\r\n    /**\r\n     * The underlying UrbexClient class which can be used to create new instances\r\n     *\r\n     * Recommended to use `isolateClient` instead\r\n     */\r\n    Client: typeof UrbexClient;\r\n    /**\r\n     * The current environment of the project\r\n     */\r\n    environment: Environment;\r\n}\r\n\r\nfunction createClient(): ExtendedUrbexClient {\r\n    const client = UrbexClient.create();\r\n    const extendedClient = client as ExtendedUrbexClient;\r\n\r\n    extendedClient.isolateClient = UrbexClient.create;\r\n    extendedClient.environment = environment;\r\n    extendedClient.isUrbexClient = isUrbexClient;\r\n    extendedClient.Client = UrbexClient;\r\n\r\n    return extendedClient;\r\n}\r\n\r\nconst urbex = createClient();\r\n\r\nexport * from \"./exportable-types\";\r\nexport * from \"./core/pipelines\";\r\n\r\nexport default urbex;\r\n"],"names":["Environment","constructor","_context","detectContext","window","document","process","versions","node","Error","nodeStrictCheck","isBrowser","isNode","context","isDevelopment","env","NODE_ENV","isProduction","environment","hasOwnProperty","obj","prop","call","isUndefined","value","isArray","Array","isObject","isString","isFunction","isEmpty","length","Object","keys","capitalize","String","charAt","toUpperCase","slice","uppercase","clone","assign","merge","defaultOptions","options","deepMerge","objects","reduce","acc","concat","key","forEach","fn","index","extractMatchFromRegExp","regexp","group","defaultValue","matches","exec","stringReplacer","search","replace","ensureLeadingToken","token","argumentIsNotProvided","startsWith","ensureTrailingToken","endsWith","undefined","combineStrings","delimiter","strings","filter","string","join","createEmptyScheme","split","object","nestedKeys","nestedObject","UrbexError","error","message","name","stack","create","config","response","urbexError","status","request","TimeoutError","timeout","NodeRequest","getAgentFromProtocol","protocol","https","http","handleDataProtocolRequest","Promise","resolve","reject","data","send","agent","url","headers","has","set","params","toString","onError","err","href","hostname","path","endpoint","get","port","parseInt","isNaN","on","destroyed","responseType","chunks","push","bind","complete","destroy","body","Buffer","setTimeout","end","br","zlib","brotliDecompress","util","promisify","gzip","gunzip","deflate","inflate","compress","createUnzip","DECODERS","BrowserRequest","DEFAULT_BROWSER_HEADERS","DEFAULT_NODE_HEADERS","version","platform","DEFAULT_URI_COMPONENT","DEFAULT_PIPELINE_EXECUTORS","DEFAULT_CLIENT_OPTIONS","urlMount","method","cache","pipelines","maxContentLength","Infinity","responseEncoding","DEFAULT_URBEX_RESPONSE","startRequest","startTime","Date","now","timestamp","toISOString","clonedResponse","pipeline","execute","concludeRequest","result","incomingResult","statusCode","statusText","statusMessage","endTime","duration","RequestApi","register","$cache","CacheClock","autoStart","debug","$api","dispatchRequest","configuration","isCacheEnabled","enabled","hit","pulled","stored","cacheKey","getCacheKey","entity","v","type","console","parseHeaderKey","formatHeaderKey","toLowerCase","trim","parseHeaderValue","JSON","stringify","normalizeHeaders","newHeaders","normalizedKey","normalizedValue","map","UrbexHeaders","$headers","withDefaults","defaults","construct","forceMerge","normalizedHeaders","normalize","merged","delete","headerKey","clear","empty","PipelineExecutor","$executor","executor","transformRequestData","decodeResponseData","encoding","isBuffer","decoder","decompressed","transformResponseData","bufferString","parse","PROTOCOL_REGEXP","URI_TEMPLATE_REGEXP_LEFT","URI_TEMPLATE_REGEXP_RIGHT","METHODS","isValidURL","URL","convertStringToURIComponent","input","pathname","origin","convertURIComponentToString","template","createRegexString","word","RegExp","serializeParams","regex","match","templateValue","parseURIIntoComponent","component","allowEndpoints","buildableComponent","componentAsString","newComponent","serializerType","searchParams","URLSearchParams","determineAppropriateURI","location","RequestConfig","$config","createConfigurationObject","unshift","defaultConfig","parsed","parseIncomingConfig","currentUrlConfig","includes","currentConfig","incomingHeaders","mergedHeaders","headersObject","reset","createMethodConfig","uri","UrbexClient","$pipelines","configure","isRunning","stop","start","injectPipeline","ejectPipeline","subscribe","unsubscribe","_","prototype","combineIncomingConfig","isUrbexClient","client","createClient","extendedClient","isolateClient","Client","urbex"],"mappings":"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"}